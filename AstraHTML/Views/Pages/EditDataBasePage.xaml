<Page x:Class="AstraHTML.Views.Pages.EditDataBasePage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:AstraHTML.Views.Pages"
      mc:Ignorable="d" 
      d:DesignHeight="500"
      d:DesignWidth="900"
      Title="EditDataBasePage">
    <Page.Resources>
        
        <!--#region Bag-->
        
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" SnapsToDevicePixels="true" StrokeThickness="1" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <LinearGradientBrush x:Key="TabItem.Static.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#F0F0F0" Offset="0.0"/>
            <GradientStop Color="#E5E5E5" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="TabItem.Static.Border" Color="#ACACAC"/>
        <LinearGradientBrush x:Key="TabItem.MouseOver.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#ECF4FC" Offset="0.0"/>
            <GradientStop Color="#DCECFC" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="TabItem.MouseOver.Border" Color="#7EB4EA"/>
        <SolidColorBrush x:Key="TabItem.Selected.Background" Color="#FFFFFF"/>
        <SolidColorBrush x:Key="TabItem.Selected.Border" Color="#ACACAC"/>
        <SolidColorBrush x:Key="TabItem.Disabled.Background" Color="#F0F0F0"/>
        <SolidColorBrush x:Key="TabItem.Disabled.Border" Color="#D9D9D9"/>
        
        <!--#endregion-->
        
        <!--#region TaskTabStyle-->
        <Style x:Key="TabStyle" TargetType="{x:Type TabItem}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="Background" Value="{StaticResource TabItem.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource TabItem.Static.Border}"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="Padding" Value="6,2,6,2"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                            <Border x:Name="mainBorder" Background="{TemplateBinding Background}" BorderThickness="1,1,1,0" BorderBrush="{TemplateBinding BorderBrush}" Margin="0">
                                <Border x:Name="innerBorder" Background="#383660" 
                                        BorderThickness="1,1,1,0" BorderBrush="White" Margin="-1" Opacity="0"/>
                            </Border>
                            <ContentPresenter x:Name="contentPresenter" ContentSource="Header" Focusable="False" HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Border}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Border}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Border}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="mainBorder" Value="#383660"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="White"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Border}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Border}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Border}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Border}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Panel.ZIndex" Value="1"/>
                                <Setter Property="Margin" Value="-2,-2,0,-2"/>
                                <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Panel.ZIndex" Value="1"/>
                                <Setter Property="Margin" Value="-2,0,-2,-2"/>
                                <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Panel.ZIndex" Value="1"/>
                                <Setter Property="Margin" Value="0,-2,-2,-2"/>
                                <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Panel.ZIndex" Value="1"/>
                                <Setter Property="Margin" Value="-2,-2,-2,0"/>
                                <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
                            </MultiDataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <!--#endregion-->
    </Page.Resources>
    <Grid>
        <Grid Background="Transparent"
              Grid.Column="1"
              Grid.Row="1">
            <Grid Background="Transparent"
              Grid.Column="1"
              Grid.Row="1">
                <TabControl Background="Transparent"
                            Grid.Column="0"
                            SelectedItem="{Binding SelectedTabItem}">
                    <!--#region TaskTable-->
                    <TabItem Style="{DynamicResource TabStyle}" x:Name="TaskTab" Header="Tasks"
                             Height="30" BorderThickness="0"
                          BorderBrush="Transparent" Foreground="White"
                          Background="Transparent">
                        
                        <TabItem.ContextMenu>
                            <ContextMenu>
                                <ContextMenu.Resources>
                                    <Style TargetType="ContextMenu">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type ContextMenu}">
                                                    <Border x:Name="Border"
                                                            Background="#383660"
                                                            BorderThickness="1">
                                                        <Border.BorderBrush>
                                                            <SolidColorBrush Color="White" />
                                                            <!-- Set this brush to transparent -->
                                                        </Border.BorderBrush>
                                                        <StackPanel IsItemsHost="True"
                      KeyboardNavigation.DirectionalNavigation="Cycle" />
                                                    </Border>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                        <Setter Property="Foreground" Value="White"/>
                                        <Setter Property="BorderThickness" Value="0"/>
                                        <Setter Property="BorderBrush" Value="Transparent"/>
                                    </Style>
                                </ContextMenu.Resources>
                                <MenuItem Header="Edit" Command="{Binding OpenEditItem}"/>
                                <MenuItem Header="Delete" Command="{Binding DeleteItem}"/>
                                <MenuItem Header="Add..">
                                    <MenuItem.ItemContainerStyle>
                                        <Style TargetType="MenuItem">
                                            <Setter Property="Background" Value="#383660"/>
                                            <Setter Property="BorderBrush" Value="White"/>
                                            <Setter Property="BorderThickness" Value="1"/>
                                            <Setter Property="Foreground" Value="White"/>
                                        </Style>
                                    </MenuItem.ItemContainerStyle>
                                    <MenuItem Header="Staff" Command="{Binding OpenAddNewStaffWindow}"/>
                                    <MenuItem Header="Task" Command="{Binding OpenAddNewTaskWindow}"/>
                                    <MenuItem Header="Project" Command="{Binding OpenAddNewProjectWindow}"/>
                                </MenuItem>
                            </ContextMenu>
                        </TabItem.ContextMenu>
                        
                        <ListView x:Name="ViewAllTasks" Background="Transparent"
                                  BorderThickness="0" BorderBrush="Transparent"
                                  SelectedItem="{Binding SelectedTask}"
                                  ItemsSource="{Binding AllTasks}">
                            <ListView.ItemContainerStyle>
                                <Style TargetType="ListViewItem">
                                    <Setter Property="Foreground" Value="White"/>
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="#2F1638"/>
                                            <Setter Property="BorderThickness" Value="1"/>
                                            <Setter Property="BorderBrush" Value="#383660"/>
                                            <Setter Property="Opacity" Value="0.9"/>
                                            <Setter Property="Foreground" Value="Wheat"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </ListView.ItemContainerStyle>
                            <ListView.View>
                                <GridView>
                                    <!--#region Header ListView -->
                                    <GridView.ColumnHeaderContainerStyle>
                                        <Style TargetType="GridViewColumnHeader">
                                            <Setter Property="Foreground" Value="White"/>
                                            <Setter Property="Background" Value="Transparent"/>
                                            <Setter Property="BorderBrush" Value="Transparent"/>
                                            <Setter Property="BorderThickness" Value="0"/>
                                            <Style.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Background" Value="Transparent"/>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </GridView.ColumnHeaderContainerStyle>
                                    <!--#endregion-->
                                    <GridViewColumn Header="id" DisplayMemberBinding="{Binding Path = id}" />
                                    <GridViewColumn Header="Name"  DisplayMemberBinding="{Binding Path = Name}"/>
                                    <GridViewColumn Header="Description" DisplayMemberBinding="{Binding Path= Description}"/>
                                    <GridViewColumn Header="Project" DisplayMemberBinding="{Binding Path = TaskProject.Title}"/>
                                    <GridViewColumn Header="Priority" DisplayMemberBinding="{Binding Path = Priority}"/>
                                </GridView>
                            </ListView.View>
                        </ListView>
                    </TabItem>
                    <!--#endregion-->
                    <!--#region StaffTable-->
                    <TabItem  Style="{DynamicResource TabStyle}" Header="Staff" x:Name="StaffTab"
                         Background="Transparent" BorderThickness="0"
                          BorderBrush="Transparent" Foreground="White">
                        
                        <TabItem.ContextMenu>
                            <ContextMenu>
                                <ContextMenu.Resources>
                                    <Style TargetType="ContextMenu">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type ContextMenu}">
                                                    <Border x:Name="Border"
                                                            Background="#383660"
                                                            BorderThickness="1">
                                                        <Border.BorderBrush>
                                                            <SolidColorBrush Color="White" />
                                                            <!-- Set this brush to transparent -->
                                                        </Border.BorderBrush>
                                                        <StackPanel IsItemsHost="True"
                      KeyboardNavigation.DirectionalNavigation="Cycle" />
                                                    </Border>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                        <Setter Property="Foreground" Value="White"/>
                                        <Setter Property="BorderThickness" Value="0"/>
                                        <Setter Property="BorderBrush" Value="Transparent"/>
                                    </Style>
                                </ContextMenu.Resources>
                                <MenuItem Header="Edit" Command="{Binding OpenEditItem}"/>
                                <MenuItem Header="Delete" Command="{Binding DeleteItem}"/>
                                <MenuItem Header="Add..">
                                    <MenuItem.ItemContainerStyle>
                                        <Style TargetType="MenuItem">
                                            <Setter Property="Background" Value="#383660"/>
                                            <Setter Property="BorderBrush" Value="White"/>
                                            <Setter Property="BorderThickness" Value="1"/>
                                            <Setter Property="Foreground" Value="White"/>
                                        </Style>
                                    </MenuItem.ItemContainerStyle>
                                    <MenuItem Header="Staff" Command="{Binding OpenAddNewStaffWindow}"/>
                                    <MenuItem Header="Task" Command="{Binding OpenAddNewTaskWindow}"/>
                                    <MenuItem Header="Project" Command="{Binding OpenAddNewProjectWindow}"/>
                                </MenuItem>
                            </ContextMenu>
                        </TabItem.ContextMenu>

                        <ListView x:Name="ViewAllStaffs"
                                  Background="Transparent"
                                  BorderThickness="0" BorderBrush="Transparent"
                                  ItemsSource ="{Binding AllStaffs}"
                                  SelectedItem="{Binding SelectedStaff}"
                                  >
                            
                            <ListView.ItemContainerStyle>
                                <Style TargetType="ListViewItem">
                                    <Setter Property="Foreground" Value="White"/>
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="#2F1638"/>
                                            <Setter Property="BorderThickness" Value="1"/>
                                            <Setter Property="BorderBrush" Value="#383660"/>
                                            <Setter Property="Opacity" Value="0.9"/>
                                            <Setter Property="Foreground" Value="Wheat"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </ListView.ItemContainerStyle>
                            
                            <ListView.View>
                                <GridView>
                                     <GridView.ColumnHeaderContainerStyle>
                                        <Style TargetType="GridViewColumnHeader">
                                            <Setter Property="Foreground" Value="White"/>
                                            <Setter Property="Background" Value="Transparent"/>
                                            <Setter Property="BorderBrush" Value="Transparent"/>
                                            <Setter Property="BorderThickness" Value="0"/>
                                            <Style.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Background" Value="Transparent"/>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </GridView.ColumnHeaderContainerStyle>
                                    <GridViewColumn Header="id" DisplayMemberBinding="{Binding Path=id}"/>
                                    <GridViewColumn Header="Name" DisplayMemberBinding="{Binding Path=Name}"/>
                                    <GridViewColumn Header="Surname" DisplayMemberBinding="{Binding Path=Surname}"/>
                                    <GridViewColumn Header="Speciality" DisplayMemberBinding="{Binding Path=Speciality}" />
                                    <GridViewColumn Header="Post" DisplayMemberBinding="{Binding Path=Post}"/>
                                    <GridViewColumn Header="Salary" DisplayMemberBinding="{Binding Path=Salary}"/>
                                    <GridViewColumn Header="Login" DisplayMemberBinding="{Binding Path=Login}"/>
                                    <GridViewColumn Header="Password" DisplayMemberBinding="{Binding Path=Password}"/>
                                </GridView>
                            </ListView.View>
                        </ListView>
                    </TabItem>
                    <!--#endregion-->
                    <!--#region ProjectTable-->
                    <TabItem  Style="{DynamicResource TabStyle}" Header="Projects" x:Name="ProjectTab"
                         Background="Transparent" BorderThickness="0"
                          BorderBrush="Transparent" Foreground="White">

                        <TabItem.ContextMenu>
                            <ContextMenu>
                                <ContextMenu.Resources>
                                    <Style TargetType="ContextMenu">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type ContextMenu}">
                                                    <Border x:Name="Border"
                                                            Background="#383660"
                                                            BorderThickness="1">
                                                        <Border.BorderBrush>
                                                            <SolidColorBrush Color="White" />
                                                            <!-- Set this brush to transparent -->
                                                        </Border.BorderBrush>
                                                        <StackPanel IsItemsHost="True"
                      KeyboardNavigation.DirectionalNavigation="Cycle" />
                                                    </Border>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                        <Setter Property="Foreground" Value="White"/>
                                        <Setter Property="BorderThickness" Value="0"/>
                                        <Setter Property="BorderBrush" Value="Transparent"/>
                                    </Style>
                                </ContextMenu.Resources>
                                <MenuItem Header="Edit" Command="{Binding OpenEditItem}"/>
                                <MenuItem Header="Delete" Command="{Binding DeleteItem}"/>
                                <MenuItem Header="Add..">
                                    <MenuItem.ItemContainerStyle>
                                        <Style TargetType="MenuItem">
                                            <Setter Property="Background" Value="#383660"/>
                                            <Setter Property="BorderBrush" Value="White"/>
                                            <Setter Property="BorderThickness" Value="1"/>
                                            <Setter Property="Foreground" Value="White"/>
                                        </Style>
                                    </MenuItem.ItemContainerStyle>
                                    <MenuItem Header="Staff" Command="{Binding OpenAddNewStaffWindow}"/>
                                    <MenuItem Header="Task" Command="{Binding OpenAddNewTaskWindow}"/>
                                    <MenuItem Header="Project" Command="{Binding OpenAddNewProjectWindow}"/>
                                </MenuItem>
                            </ContextMenu>
                        </TabItem.ContextMenu>

                        <ListView x:Name="ViewAllProjects"
                                  Background="Transparent"
                                  BorderThickness="0" BorderBrush="Transparent"
                                  ItemsSource ="{Binding AllProjects}"
                                  SelectedItem="{Binding SelectedProject}">
                            <ListView.ItemContainerStyle>
                                
                                <Style TargetType="ListViewItem">
                                    <Setter Property="Foreground" Value="White"/>
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="#2F1638"/>
                                            <Setter Property="BorderThickness" Value="1"/>
                                            <Setter Property="BorderBrush" Value="#383660"/>
                                            <Setter Property="Opacity" Value="0.9"/>
                                            <Setter Property="Foreground" Value="Wheat"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </ListView.ItemContainerStyle>
                            
                            <ListView.View>
                                <GridView>
                                    <GridView.ColumnHeaderContainerStyle>
                                        <Style TargetType="GridViewColumnHeader">
                                            <Setter Property="Foreground" Value="White"/>
                                            <Setter Property="Background" Value="Transparent"/>
                                            <Setter Property="BorderBrush" Value="Transparent"/>
                                            <Setter Property="BorderThickness" Value="0"/>
                                            <Style.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Background" Value="Transparent"/>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </GridView.ColumnHeaderContainerStyle>
                                    <GridViewColumn Header="id" DisplayMemberBinding="{Binding Path=id}"/>
                                    <GridViewColumn Header="Title" DisplayMemberBinding="{Binding Path=Title}"/>
                                    <GridViewColumn Header="Description" DisplayMemberBinding="{Binding Path=Description}"/>
                                    <GridViewColumn Header="Consumer" DisplayMemberBinding="{Binding Path=Client}" />
                                </GridView>
                            </ListView.View>
                        </ListView>
                    </TabItem>
                    <!--#endregion-->
                </TabControl>
            </Grid>
            <!--#endregion-->
        </Grid>
        <!--#endregion-->
    </Grid>
</Page>
